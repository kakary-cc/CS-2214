1.
myROM[0]

3.
(a) The capacity of program counter needs to be changed from 4 to 10 bits.
E15 turbo has a capacity for up to 1024 instruction, so the last instruction numbered 1023 would need 10 bits to represent in binary.
(b) The length per instruction will be changed from 12 to 18 bits.
Change in the program counter's capacity will also increase length of immediate values from 4 to 10 bits so instructions like jmp, jz, and jnz can function properly.
(c) Capacity of the general-purpose registers needs to be changed from 4 to 10 bits, as increase in immediate value's length allows 10 bits to be passed into general-purpose registers through the movi instruction.
(d) Capacity of each ROM cell needs to be changed from 12 to 18 bits to store the longer instructions.
(e) ALUs need to support 10 bit input and output to handle 10 bit immediate values and general-purpose registers, as well as a 10 bit program counter register.

4.
(a) 4
(b) 0
(c) 5
(d) 7
(e) 2
(f) 0000010

5.
(a)
j target
010 111 111 111 1001
(b)
jeq $4, $0, target
110 100 000 111 1001
(c)
slti $7, $4, 10
111 100 111 000 1010
sw $7, isless($0)
101 000 111 000 0011
(d)
lw $7, 29($0)
100 000 111 001 1101
sw $7, 30($0)
101 000 111 001 1110

6.
addi $1, $1, 1
001 001 001 000 0001
add  $2, $2, $2
000 010 010 010 0000
halt
010 000 000 000 0010

7.
lw $1, 20($0)
lw $2, 30($0)
add $3, $1, $2
sw $3, 40($0)
halt

8.
movi $1, 10
001 000 001 000 1010

loop:	lw $2, 20($3)
	100 011 010 001 0100
	addi $2, $2, 1
	001 010 010 000 0001
	sw $2, 20($3)
	101 011 010 001 0100
	jeq $1, $3, done
	110 001 011 000 0010
	addi $3, $3, 1
	001 011 011 000 0001
	j loop
	010 000 000 000 0001

done: 	halt
	010 000 000 000 0010
